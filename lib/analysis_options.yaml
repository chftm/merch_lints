# Very Good Analysis provides a strict but sensible set of default rules.
include: package:very_good_analysis/analysis_options.yaml

linter:
  rules:
    # This rule is often useless and annoying.
    public_member_api_docs: false

    # We prefer the default sorting order from
    # Dart Code Linter, which puts constructors after fields.
    sort_constructors_first: false

    # The reasoning for this rule is explained in great detail here:
    # https://dart-lang.github.io/linter/lints/avoid_implementing_value_types.html
    avoid_implementing_value_types: true

    # Highlights unused functions in executable libraries, generally good.
    unreachable_from_main: true

    # Avoid unsafe HTML APIs
    unsafe_html: true

    # Specifying type literals in patterns is a mistake
    # which is easy to make, so it should trigger a lint.
    type_literal_in_constant_pattern: true

    # No reason not to enable this.
    unnecessary_null_aware_operator_on_extension_on_nullable: true

    # Deprecated members are deprecated, you shouldn't use them.
    deprecated_member_use_from_same_package: true

# Dart Code Linter provides additional linting rules.
analyzer:
  plugins:
    - dart_code_linter

dart_code_metrics:
  # Enable all Dart Code Linter rules by default.
  extends:
    - package:dart_code_linter/presets/all.yaml
    - package:dart_code_linter/presets/flame.yaml
    - package:dart_code_linter/presets/intl.yaml

  metrics:
    cyclomatic-complexity: 5
    maintainability-index: 50
    maximum-nesting-level: 5
    source-lines-of-code: 20
    weight-of-class: 0.33

  anti-patterns:
    - long-method

  rules:
    # The 'late' keyword is often useful.
    - avoid-late-keyword: false

    # We're Russian, so we use non-ASCII symbols in strings
    # pretty often.
    - avoid-non-ascii-symbols: false

    # Using the non-null operator is often safe and much
    # more convenient than the '?' operator.
    - avoid-non-null-assertion: false

    # Putting the 'child' named argument in widgets last
    # makes the widget tree more readable.
    - arguments-ordering:
        child-last: true

    # Nested conditional expressions look bad.
    - prefer-conditional-expressions:
        ignore-nested: true

    - prefer-correct-identifier-length:
        exceptions:
          # Ignore 'i' because it's often used in for loops.
          - "i"

          # Ignore 'id' because it is a descriptive name
          - "id"

        # The default max length of 300 is too long.
        max-identifier-length: 30

    # Lists with more than 4 items are much more readable with
    # a trailing comma.
    - prefer-trailing-comma:
        break-on: 4

    - prefer-static-class:
        # Allow private global variables. Using them is generally fine and often
        # much simpler than creating a dedicated class for them.
        ignore-private: true
